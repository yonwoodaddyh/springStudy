package bitcho.user.test;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.sql.SQLException;

import org.junit.Before;
import org.junit.Test;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;
import org.springframework.dao.EmptyResultDataAccessException;

import bitcho.user.dao.UserDAO;
import bitcho.user.domain.User;

public class UserDAOTest {

	private UserDAO dao;
	private User user;
	private User user1;
	private User user2;
	private User user3;
	
	
	@Before
	public void setUp() {
		@SuppressWarnings("resource")
		ApplicationContext context = new GenericXmlApplicationContext("applicationContext.xml");
		dao = context.getBean("userDAO", UserDAO.class);
		
		user = new User("bitcho10", "조성한", "dusdn1027");
		user1 = new User("bitcho11", "조성한", "dusdn1027");
		user2 = new User("bitcho12", "조성한", "dusdn1027");
		user3 = new User("bitcho13", "조성한", "dusdn1027");
	}
	
	@Test
	public void addAndGet() throws SQLException {
		// TODO Auto-generated method stub
		dao.deleteAll();
		assertThat(dao.getCount(), is(0));
		
		dao.add(user);
		assertThat(dao.getCount(), is(1));

		dao.add(user1);
		assertThat(dao.getCount(), is(2));
		
		dao.add(user2);
		assertThat(dao.getCount(), is(3));
		
		dao.add(user3);
		assertThat(dao.getCount(), is(4));
		
		User userget1 = dao.get(user1.getId());
		assertThat(userget1.getName(), is(user1.getName()));
		assertThat(userget1.getPassword(), is(user1.getPassword()));
		
		User userget2 = dao.get(user2.getId());
		assertThat(userget2.getName(), is(user2.getName()));
		assertThat(userget2.getPassword(), is(user2.getPassword()));
	}
	
	@Test(expected=EmptyResultDataAccessException.class)
	public void getUserFailure() throws SQLException {
		dao.deleteAll();
		assertThat(dao.getCount(), is(0));
		
		dao.get("unknown_id");
	}
	
}